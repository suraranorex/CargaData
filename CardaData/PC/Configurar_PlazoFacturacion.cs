///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CardaData.PC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Configurar_PlazoFacturacion recording.
    /// </summary>
    [TestModule("9de537a8-11f6-4504-81e4-cecc6fe042c9", ModuleType.Recording, 1)]
    public partial class Configurar_PlazoFacturacion : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CardaData.CardaDataRepository repository.
        /// </summary>
        public static global::CardaData.CardaDataRepository repo = global::CardaData.CardaDataRepository.Instance;

        static Configurar_PlazoFacturacion instance = new Configurar_PlazoFacturacion();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Configurar_PlazoFacturacion()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Configurar_PlazoFacturacion Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("8bb4d90e-0931-42e5-a69e-df43fdd1058a")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.bttn_Editar' at Center.", repo.ApplicationUnderTest.bttn_EditarInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.bttn_Editar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'ApplicationUnderTest.input'", repo.ApplicationUnderTest.inputInfo, new ActionTimeout(20000), new RecordItemIndex(1));
            repo.ApplicationUnderTest.inputInfo.WaitForExists(20000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SolapaTarifa_CodPAS' at Center.", repo.ApplicationUnderTest.SolapaTarifa_CodPASInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.SolapaTarifa_CodPAS.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ApplicationUnderTest.txt_ConfigPeriodoFacturacion'", repo.ApplicationUnderTest.txt_ConfigPeriodoFacturacionInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.ApplicationUnderTest.txt_ConfigPeriodoFacturacionInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.bttn_AgregarPlazo' at Center.", repo.ApplicationUnderTest.bttn_AgregarPlazoInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.bttn_AgregarPlazo.Click();
            Delay.Milliseconds(0);
            
            // ---Completar info de la fila
            Report.Log(ReportLevel.Info, "Section", "---Completar info de la fila", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.celdaVacia_TipoPlazo'", repo.ApplicationUnderTest.celdaVacia_TipoPlazoInfo, new ActionTimeout(10000), new RecordItemIndex(6));
            repo.ApplicationUnderTest.celdaVacia_TipoPlazoInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 100ms.", new RecordItemIndex(7));
            Delay.Duration(100, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.celdaVacia_TipoPlazo' at Center.", repo.ApplicationUnderTest.celdaVacia_TipoPlazoInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.celdaVacia_TipoPlazo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.option_Mensual' at Center.", repo.ApplicationUnderTest.option_MensualInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.option_Mensual.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.celda_OpcionMensual'", repo.ApplicationUnderTest.celda_OpcionMensualInfo, new ActionTimeout(10000), new RecordItemIndex(10));
            repo.ApplicationUnderTest.celda_OpcionMensualInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.celdaVacia_DiasPrevios' at Center.", repo.ApplicationUnderTest.celdaVacia_DiasPreviosInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.celdaVacia_DiasPrevios.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '15' with focus on 'ApplicationUnderTest.celdaVacia_DiasPrevios'.", repo.ApplicationUnderTest.celdaVacia_DiasPreviosInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.celdaVacia_DiasPrevios.PressKeys("15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.txt_ConfigPeriodoFacturacion' at Center.", repo.ApplicationUnderTest.txt_ConfigPeriodoFacturacionInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.txt_ConfigPeriodoFacturacion.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.celdaVacia_InicioVigencia' at Center.", repo.ApplicationUnderTest.celdaVacia_InicioVigenciaInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.celdaVacia_InicioVigencia.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '26/05/2021' with focus on 'ApplicationUnderTest.celdaVacia_InicioVigencia'.", repo.ApplicationUnderTest.celdaVacia_InicioVigenciaInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.celdaVacia_InicioVigencia.PressKeys("26/05/2021");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.txt_ConfigPeriodoFacturacion' at Center.", repo.ApplicationUnderTest.txt_ConfigPeriodoFacturacionInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.txt_ConfigPeriodoFacturacion.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by 400 units.", new RecordItemIndex(17));
            Mouse.ScrollWheel(400);
            Delay.Milliseconds(300);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.bttn_Actualizar' at Center.", repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.bttn_ActualizarInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.bttn_Actualizar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.bttn_Editar'", repo.ApplicationUnderTest.bttn_EditarInfo, new ActionTimeout(10000), new RecordItemIndex(20));
            repo.ApplicationUnderTest.bttn_EditarInfo.WaitForExists(10000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
