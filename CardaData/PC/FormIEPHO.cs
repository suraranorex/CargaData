///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CardaData.PC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FormIEPHO recording.
    /// </summary>
    [TestModule("60239e3b-7f33-4f69-8780-d4800b1b8638", ModuleType.Recording, 1)]
    public partial class FormIEPHO : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CardaData.CardaDataRepository repository.
        /// </summary>
        public static global::CardaData.CardaDataRepository repo = global::CardaData.CardaDataRepository.Instance;

        static FormIEPHO instance = new FormIEPHO();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FormIEPHO()
        {
            NombArch_IEPHO = "IEPHO.xml";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FormIEPHO Instance
        {
            get { return instance; }
        }

#region Variables

        string _NombArch_IEPHO;

        /// <summary>
        /// Gets or sets the value of variable NombArch_IEPHO.
        /// </summary>
        [TestVariable("5ad902d8-4b06-4b8b-a5fd-fce79f40d721")]
        public string NombArch_IEPHO
        {
            get { return _NombArch_IEPHO; }
            set { _NombArch_IEPHO = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("8bb4d90e-0931-42e5-a69e-df43fdd1058a")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Utilidades1' at Center.", repo.ApplicationUnderTest.Utilidades1Info, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Utilidades1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ApplicationUnderTest.ImportarDatosAdministrativos'", repo.ApplicationUnderTest.ImportarDatosAdministrativosInfo, new ActionTimeout(30000), new RecordItemIndex(1));
            repo.ApplicationUnderTest.ImportarDatosAdministrativosInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Btn_Examinar2' at Center.", repo.ApplicationUnderTest.Btn_Examinar2Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.Btn_Examinar2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'Ventana_Emergente_Abrir'", repo.Ventana_Emergente_Abrir.SelfInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.Ventana_Emergente_Abrir.SelfInfo.WaitForExists(30000);
            
            // Ventana Emergente
            Report.Log(ReportLevel.Info, "Section", "Ventana Emergente", new RecordItemIndex(4));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VentanaEmergente_Examinar.BarraInferior' at Center.", repo.VentanaEmergente_Examinar.BarraInferiorInfo, new RecordItemIndex(5));
            repo.VentanaEmergente_Examinar.BarraInferior.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NombArch_IEPHO'.", new RecordItemIndex(6));
            Keyboard.Press(NombArch_IEPHO);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(7));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Ventana_Emergente_Abrir.ButtonAbrir' at 47;13.", repo.Ventana_Emergente_Abrir.ButtonAbrirInfo, new RecordItemIndex(8));
            repo.Ventana_Emergente_Abrir.ButtonAbrir.Click("47;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(9));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ApplicationUnderTest.lbl_resultadoFormCarga'", repo.ApplicationUnderTest.lbl_resultadoFormCargaInfo, new ActionTimeout(30000), new RecordItemIndex(10));
            repo.ApplicationUnderTest.lbl_resultadoFormCargaInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ApplicationUnderTest.btn_FinalizarCargaDataPC' at Center.", repo.ApplicationUnderTest.btn_FinalizarCargaDataPCInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.btn_FinalizarCargaDataPC.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.btn_FinalizarCargaDataPC' at Center.", repo.ApplicationUnderTest.btn_FinalizarCargaDataPCInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.btn_FinalizarCargaDataPC.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>'Datos importados correctamente.') on item 'ApplicationUnderTest.lbl_Resultado_DatosImportadosFormAsistMed'.", repo.ApplicationUnderTest.lbl_Resultado_DatosImportadosFormAsistMedInfo, new RecordItemIndex(13));
            Validate.AttributeContains(repo.ApplicationUnderTest.lbl_Resultado_DatosImportadosFormAsistMedInfo, "InnerText", "Datos importados correctamente.");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
