///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CardaData.PC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AgregarCoberturas_SumaAsegurada_Prima recording.
    /// </summary>
    [TestModule("95978e28-c93a-4d35-b5b1-3b847669bc49", ModuleType.Recording, 1)]
    public partial class AgregarCoberturas_SumaAsegurada_Prima : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CardaData.CardaDataRepository repository.
        /// </summary>
        public static global::CardaData.CardaDataRepository repo = global::CardaData.CardaDataRepository.Instance;

        static AgregarCoberturas_SumaAsegurada_Prima instance = new AgregarCoberturas_SumaAsegurada_Prima();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AgregarCoberturas_SumaAsegurada_Prima()
        {
            SumaAsegurada = "2000000";
            PrimaFija = "2479,43";
            Cobertura = "Invalidez Total y Permanente";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AgregarCoberturas_SumaAsegurada_Prima Instance
        {
            get { return instance; }
        }

#region Variables

        string _SumaAsegurada;

        /// <summary>
        /// Gets or sets the value of variable SumaAsegurada.
        /// </summary>
        [TestVariable("8ffbcfc5-9dec-4edc-9d46-7d7fbefe78b4")]
        public string SumaAsegurada
        {
            get { return _SumaAsegurada; }
            set { _SumaAsegurada = value; }
        }

        string _PrimaFija;

        /// <summary>
        /// Gets or sets the value of variable PrimaFija.
        /// </summary>
        [TestVariable("8bf57737-b2f9-4cac-a2e7-aa0dbbcb9dc8")]
        public string PrimaFija
        {
            get { return _PrimaFija; }
            set { _PrimaFija = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("8bb4d90e-0931-42e5-a69e-df43fdd1058a")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Cobertura.
        /// </summary>
        [TestVariable("7c2969b4-27d8-4945-a9a9-e4a05ced7301")]
        public string Cobertura
        {
            get { return repo.Cobertura; }
            set { repo.Cobertura = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_Cobertura' at Center.", repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_CoberturaInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_Cobertura.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.option_AgregarCobertura' at Center.", repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.option_AgregarCoberturaInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.option_AgregarCobertura.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_SumaAsegurada' at Center.", repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_SumaAseguradaInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_SumaAsegurada.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SumaAsegurada' with focus on 'ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_SumaAsegurada'.", repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_SumaAseguradaInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_SumaAsegurada.PressKeys(SumaAsegurada);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_PrimaFija' at Center.", repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_PrimaFijaInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_PrimaFija.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PrimaFija' with focus on 'ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_PrimaFija'.", repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_PrimaFijaInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.input_PrimaFija.PressKeys(PrimaFija);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.txt_Cobertura' at Center.", repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.txt_CoberturaInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.txt_Cobertura.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to not exist. Associated repository item: 'ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.Copy_of_input_PrimaFija'", repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.Copy_of_input_PrimaFijaInfo, new ActionTimeout(20000), new RecordItemIndex(7));
            repo.ApplicationUnderTest.Creacion_PlanEnlatado_Autonomia.Copy_of_input_PrimaFijaInfo.WaitForNotExists(20000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
