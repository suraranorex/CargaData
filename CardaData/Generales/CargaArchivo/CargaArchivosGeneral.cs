///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CardaData.Generales.CargaArchivo
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CargaArchivosGeneral recording.
    /// </summary>
    [TestModule("8e12e590-b4f5-42ff-87f7-ee8b8e4da839", ModuleType.Recording, 1)]
    public partial class CargaArchivosGeneral : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CardaData.CardaDataRepository repository.
        /// </summary>
        public static global::CardaData.CardaDataRepository repo = global::CardaData.CardaDataRepository.Instance;

        static CargaArchivosGeneral instance = new CargaArchivosGeneral();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CargaArchivosGeneral()
        {
            NombreArchivoPC = "AdminDataLoader_Part_3.0.9-DEV.xml";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CargaArchivosGeneral Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("8bb4d90e-0931-42e5-a69e-df43fdd1058a")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable NombreArchivo.
        /// </summary>
        [TestVariable("658183a5-d45d-4ec1-a6ea-51dbf041ea2b")]
        public string NombreArchivo
        {
            get { return repo.NombreArchivo; }
            set { repo.NombreArchivo = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable NombreArchivoPC.
        /// </summary>
        [TestVariable("57917d37-b7fd-456c-a710-afe2ae095502")]
        public string NombreArchivoPC
        {
            get { return repo.NombreArchivoPC; }
            set { repo.NombreArchivoPC = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.Btn_Examinar2'", repo.ApplicationUnderTest.Btn_Examinar2Info, new ActionTimeout(5000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.Btn_Examinar2Info.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Btn_Examinar2' at Center.", repo.ApplicationUnderTest.Btn_Examinar2Info, new RecordItemIndex(1));
            repo.ApplicationUnderTest.Btn_Examinar2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'Ventana_Emergente_Abrir'", repo.Ventana_Emergente_Abrir.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(2));
            repo.Ventana_Emergente_Abrir.SelfInfo.WaitForExists(5000);
            
            // Ventana Emergente
            Report.Log(ReportLevel.Info, "Section", "Ventana Emergente", new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VentanaEmergente_Examinar.Escritorio' at Center.", repo.VentanaEmergente_Examinar.EscritorioInfo, new RecordItemIndex(4));
            repo.VentanaEmergente_Examinar.Escritorio.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'C:\\Carga_Inicial_QA\\PC\\admin'.", new RecordItemIndex(5));
            Keyboard.Press("C:\\Carga_Inicial_QA\\PC\\admin");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(6));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VentanaEmergente_Examinar.BarraInferior' at Center.", repo.VentanaEmergente_Examinar.BarraInferiorInfo, new RecordItemIndex(7));
            repo.VentanaEmergente_Examinar.BarraInferior.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NombreArchivoPC'.", new RecordItemIndex(8));
            Keyboard.Press(NombreArchivoPC);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(9));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Ventana_Emergente_Abrir.ButtonAbrir' at 47;13.", repo.Ventana_Emergente_Abrir.ButtonAbrirInfo, new RecordItemIndex(10));
            repo.Ventana_Emergente_Abrir.ButtonAbrir.Click("47;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ApplicationUnderTest.Copy_of_CargandoArchivoS'", repo.ApplicationUnderTest.Copy_of_CargandoArchivoSInfo, new ActionTimeout(30000), new RecordItemIndex(11));
            repo.ApplicationUnderTest.Copy_of_CargandoArchivoSInfo.WaitForExists(30000);
            
            EsperaFinalizarCarga();
            Delay.Milliseconds(0);
            
            EsperaFinalizarProceso();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ApplicationUnderTest.btn_FinalizarCargaDataPC' at Center.", repo.ApplicationUnderTest.btn_FinalizarCargaDataPCInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.btn_FinalizarCargaDataPC.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.btn_FinalizarCargaDataPC' at Center.", repo.ApplicationUnderTest.btn_FinalizarCargaDataPCInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.btn_FinalizarCargaDataPC.Click();
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 3m to exist. Associated repository item: 'ApplicationUnderTest.lbl_ErrorEnLaSolicitudDeHTTP503'", repo.ApplicationUnderTest.lbl_ErrorEnLaSolicitudDeHTTP503Info, new ActionTimeout(180000), new RecordItemIndex(16));
                repo.ApplicationUnderTest.lbl_ErrorEnLaSolicitudDeHTTP503Info.WaitForExists(180000);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(16)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.btn_AceptarError' at Center.", repo.ApplicationUnderTest.btn_AceptarErrorInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.btn_AceptarError.Click();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.btn_FinalizarCargaDataPC' at Center.", repo.ApplicationUnderTest.btn_FinalizarCargaDataPCInfo, new RecordItemIndex(18));
            //repo.ApplicationUnderTest.btn_FinalizarCargaDataPC.Click();
            //Delay.Milliseconds(0);
            
            try {
                //Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 3m to exist. Associated repository item: 'ApplicationUnderTest.lbl_ErrorEnLaSolicitudDeHTTP503'", repo.ApplicationUnderTest.lbl_ErrorEnLaSolicitudDeHTTP503Info, new ActionTimeout(180000), new RecordItemIndex(19));
                //repo.ApplicationUnderTest.lbl_ErrorEnLaSolicitudDeHTTP503Info.WaitForExists(180000);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(19)); }
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.btn_AceptarError' at Center.", repo.ApplicationUnderTest.btn_AceptarErrorInfo, new RecordItemIndex(20));
            //repo.ApplicationUnderTest.btn_AceptarError.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 1h.", new RecordItemIndex(21));
            //Delay.Duration(3600000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'F5' Press with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(22));
            Keyboard.PrepareFocus(repo.ApplicationUnderTest.Self);
            Keyboard.Press(System.Windows.Forms.Keys.F5, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 15m to exist. Associated repository item: 'ApplicationUnderTest.lbl_ResultadosDeImportacion'", repo.ApplicationUnderTest.lbl_ResultadosDeImportacionInfo, new ActionTimeout(900000), new RecordItemIndex(23));
            repo.ApplicationUnderTest.lbl_ResultadosDeImportacionInfo.WaitForExists(900000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (InnerText~'Datos importados correctamente') on item 'ApplicationUnderTest.lbl_Resulyado_DatosImportados'.", repo.ApplicationUnderTest.lbl_Resulyado_DatosImportadosInfo, new RecordItemIndex(24));
            Validate.AttributeRegex(repo.ApplicationUnderTest.lbl_Resulyado_DatosImportadosInfo, "InnerText", new Regex("Datos importados correctamente"));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
